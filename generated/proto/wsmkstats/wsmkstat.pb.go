// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.12.4
// source: protocols/wsmkstat.proto

package wsmkstats

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WsAllMarketsStatEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*WsMarketStatEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WsAllMarketsStatEvent) Reset() {
	*x = WsAllMarketsStatEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_wsmkstat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WsAllMarketsStatEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WsAllMarketsStatEvent) ProtoMessage() {}

func (x *WsAllMarketsStatEvent) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_wsmkstat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WsAllMarketsStatEvent.ProtoReflect.Descriptor instead.
func (*WsAllMarketsStatEvent) Descriptor() ([]byte, []int) {
	return file_protocols_wsmkstat_proto_rawDescGZIP(), []int{0}
}

func (x *WsAllMarketsStatEvent) GetEvents() []*WsMarketStatEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

// Define the WsMarketStatEvent message
type WsMarketStatEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event              string `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Time               int64  `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	Symbol             string `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	PriceChange        string `protobuf:"bytes,4,opt,name=priceChange,proto3" json:"priceChange,omitempty"`
	PriceChangePercent string `protobuf:"bytes,5,opt,name=priceChangePercent,proto3" json:"priceChangePercent,omitempty"`
	WeightedAvgPrice   string `protobuf:"bytes,6,opt,name=weightedAvgPrice,proto3" json:"weightedAvgPrice,omitempty"`
	PrevClosePrice     string `protobuf:"bytes,7,opt,name=prevClosePrice,proto3" json:"prevClosePrice,omitempty"`
	LastPrice          string `protobuf:"bytes,8,opt,name=lastPrice,proto3" json:"lastPrice,omitempty"`
	CloseQty           string `protobuf:"bytes,9,opt,name=closeQty,proto3" json:"closeQty,omitempty"`
	BidPrice           string `protobuf:"bytes,10,opt,name=bidPrice,proto3" json:"bidPrice,omitempty"`
	BidQty             string `protobuf:"bytes,11,opt,name=bidQty,proto3" json:"bidQty,omitempty"`
	AskPrice           string `protobuf:"bytes,12,opt,name=askPrice,proto3" json:"askPrice,omitempty"`
	AskQty             string `protobuf:"bytes,13,opt,name=askQty,proto3" json:"askQty,omitempty"`
	OpenPrice          string `protobuf:"bytes,14,opt,name=openPrice,proto3" json:"openPrice,omitempty"`
	HighPrice          string `protobuf:"bytes,15,opt,name=highPrice,proto3" json:"highPrice,omitempty"`
	LowPrice           string `protobuf:"bytes,16,opt,name=lowPrice,proto3" json:"lowPrice,omitempty"`
	BaseVolume         string `protobuf:"bytes,17,opt,name=baseVolume,proto3" json:"baseVolume,omitempty"`
	QuoteVolume        string `protobuf:"bytes,18,opt,name=quoteVolume,proto3" json:"quoteVolume,omitempty"`
	OpenTime           int64  `protobuf:"varint,19,opt,name=openTime,proto3" json:"openTime,omitempty"`
	CloseTime          int64  `protobuf:"varint,20,opt,name=closeTime,proto3" json:"closeTime,omitempty"`
	FirstID            int64  `protobuf:"varint,21,opt,name=firstID,proto3" json:"firstID,omitempty"`
	LastID             int64  `protobuf:"varint,22,opt,name=lastID,proto3" json:"lastID,omitempty"`
	Count              int64  `protobuf:"varint,23,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *WsMarketStatEvent) Reset() {
	*x = WsMarketStatEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_wsmkstat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WsMarketStatEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WsMarketStatEvent) ProtoMessage() {}

func (x *WsMarketStatEvent) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_wsmkstat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WsMarketStatEvent.ProtoReflect.Descriptor instead.
func (*WsMarketStatEvent) Descriptor() ([]byte, []int) {
	return file_protocols_wsmkstat_proto_rawDescGZIP(), []int{1}
}

func (x *WsMarketStatEvent) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *WsMarketStatEvent) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *WsMarketStatEvent) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *WsMarketStatEvent) GetPriceChange() string {
	if x != nil {
		return x.PriceChange
	}
	return ""
}

func (x *WsMarketStatEvent) GetPriceChangePercent() string {
	if x != nil {
		return x.PriceChangePercent
	}
	return ""
}

func (x *WsMarketStatEvent) GetWeightedAvgPrice() string {
	if x != nil {
		return x.WeightedAvgPrice
	}
	return ""
}

func (x *WsMarketStatEvent) GetPrevClosePrice() string {
	if x != nil {
		return x.PrevClosePrice
	}
	return ""
}

func (x *WsMarketStatEvent) GetLastPrice() string {
	if x != nil {
		return x.LastPrice
	}
	return ""
}

func (x *WsMarketStatEvent) GetCloseQty() string {
	if x != nil {
		return x.CloseQty
	}
	return ""
}

func (x *WsMarketStatEvent) GetBidPrice() string {
	if x != nil {
		return x.BidPrice
	}
	return ""
}

func (x *WsMarketStatEvent) GetBidQty() string {
	if x != nil {
		return x.BidQty
	}
	return ""
}

func (x *WsMarketStatEvent) GetAskPrice() string {
	if x != nil {
		return x.AskPrice
	}
	return ""
}

func (x *WsMarketStatEvent) GetAskQty() string {
	if x != nil {
		return x.AskQty
	}
	return ""
}

func (x *WsMarketStatEvent) GetOpenPrice() string {
	if x != nil {
		return x.OpenPrice
	}
	return ""
}

func (x *WsMarketStatEvent) GetHighPrice() string {
	if x != nil {
		return x.HighPrice
	}
	return ""
}

func (x *WsMarketStatEvent) GetLowPrice() string {
	if x != nil {
		return x.LowPrice
	}
	return ""
}

func (x *WsMarketStatEvent) GetBaseVolume() string {
	if x != nil {
		return x.BaseVolume
	}
	return ""
}

func (x *WsMarketStatEvent) GetQuoteVolume() string {
	if x != nil {
		return x.QuoteVolume
	}
	return ""
}

func (x *WsMarketStatEvent) GetOpenTime() int64 {
	if x != nil {
		return x.OpenTime
	}
	return 0
}

func (x *WsMarketStatEvent) GetCloseTime() int64 {
	if x != nil {
		return x.CloseTime
	}
	return 0
}

func (x *WsMarketStatEvent) GetFirstID() int64 {
	if x != nil {
		return x.FirstID
	}
	return 0
}

func (x *WsMarketStatEvent) GetLastID() int64 {
	if x != nil {
		return x.LastID
	}
	return 0
}

func (x *WsMarketStatEvent) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Define the response message
type StreamAllMarketsStatEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StreamAllMarketsStatEventResponse) Reset() {
	*x = StreamAllMarketsStatEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_wsmkstat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamAllMarketsStatEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAllMarketsStatEventResponse) ProtoMessage() {}

func (x *StreamAllMarketsStatEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_wsmkstat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAllMarketsStatEventResponse.ProtoReflect.Descriptor instead.
func (*StreamAllMarketsStatEventResponse) Descriptor() ([]byte, []int) {
	return file_protocols_wsmkstat_proto_rawDescGZIP(), []int{2}
}

func (x *StreamAllMarketsStatEventResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_protocols_wsmkstat_proto protoreflect.FileDescriptor

var file_protocols_wsmkstat_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2f, 0x77, 0x73, 0x6d, 0x6b,
	0x73, 0x74, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6d, 0x6b, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x50, 0x0a, 0x15, 0x57, 0x73, 0x41, 0x6c,
	0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x37, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6b, 0x73, 0x74, 0x61, 0x74, 0x73, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x57, 0x73, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xb9, 0x05, 0x0a, 0x11, 0x57,
	0x73, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x72, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x70, 0x72, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x65, 0x64,
	0x41, 0x76, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x65, 0x64, 0x41, 0x76, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x73,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x51,
	0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x51,
	0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x62, 0x69, 0x64, 0x51, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x62, 0x69, 0x64, 0x51, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x73, 0x6b, 0x51, 0x74, 0x79, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x73, 0x6b, 0x51, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70,
	0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x70, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x69, 0x67, 0x68,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x69, 0x67,
	0x68, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x77, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x77, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x66, 0x69, 0x72, 0x73, 0x74, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x66, 0x69, 0x72, 0x73, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x73, 0x74,
	0x49, 0x44, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3d, 0x0a, 0x21, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x41, 0x6c, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x91, 0x01, 0x0a, 0x1a, 0x41, 0x6c, 0x6c, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x73, 0x0a, 0x19, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x6c,
	0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x23, 0x2e, 0x6d, 0x6b, 0x73, 0x74, 0x61, 0x74, 0x73, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x57, 0x73, 0x41, 0x6c, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x2f, 0x2e, 0x6d, 0x6b, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x6c, 0x6c, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x42, 0x1d, 0x5a, 0x1b, 0x2e, 0x2f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77,
	0x73, 0x6d, 0x6b, 0x73, 0x74, 0x61, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protocols_wsmkstat_proto_rawDescOnce sync.Once
	file_protocols_wsmkstat_proto_rawDescData = file_protocols_wsmkstat_proto_rawDesc
)

func file_protocols_wsmkstat_proto_rawDescGZIP() []byte {
	file_protocols_wsmkstat_proto_rawDescOnce.Do(func() {
		file_protocols_wsmkstat_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocols_wsmkstat_proto_rawDescData)
	})
	return file_protocols_wsmkstat_proto_rawDescData
}

var file_protocols_wsmkstat_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_protocols_wsmkstat_proto_goTypes = []interface{}{
	(*WsAllMarketsStatEvent)(nil),             // 0: mkstatsevent.WsAllMarketsStatEvent
	(*WsMarketStatEvent)(nil),                 // 1: mkstatsevent.WsMarketStatEvent
	(*StreamAllMarketsStatEventResponse)(nil), // 2: mkstatsevent.StreamAllMarketsStatEventResponse
}
var file_protocols_wsmkstat_proto_depIdxs = []int32{
	1, // 0: mkstatsevent.WsAllMarketsStatEvent.events:type_name -> mkstatsevent.WsMarketStatEvent
	0, // 1: mkstatsevent.AllMarketsStatEventService.StreamAllMarketsStatEvent:input_type -> mkstatsevent.WsAllMarketsStatEvent
	2, // 2: mkstatsevent.AllMarketsStatEventService.StreamAllMarketsStatEvent:output_type -> mkstatsevent.StreamAllMarketsStatEventResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_protocols_wsmkstat_proto_init() }
func file_protocols_wsmkstat_proto_init() {
	if File_protocols_wsmkstat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protocols_wsmkstat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WsAllMarketsStatEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_wsmkstat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WsMarketStatEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_wsmkstat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamAllMarketsStatEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocols_wsmkstat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protocols_wsmkstat_proto_goTypes,
		DependencyIndexes: file_protocols_wsmkstat_proto_depIdxs,
		MessageInfos:      file_protocols_wsmkstat_proto_msgTypes,
	}.Build()
	File_protocols_wsmkstat_proto = out.File
	file_protocols_wsmkstat_proto_rawDesc = nil
	file_protocols_wsmkstat_proto_goTypes = nil
	file_protocols_wsmkstat_proto_depIdxs = nil
}
